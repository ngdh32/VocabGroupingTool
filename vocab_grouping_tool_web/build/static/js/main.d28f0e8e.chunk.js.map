{"version":3,"sources":["logo.svg","modules/Vocab.js","modules/VocabList.js","modules/Edit.js","Config.js","modules/Home.js","modules/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","iconStyle","fontSize","Vocab","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","editClick","addClick","deleteClick","state","isOpen","setState","e","preventDefault","editObject","id","word","meaning","example","parentId","userId","editToggle","editPanelOnChange","console","log","deleteId","handleRemoveClicked","_this2","subVocabs","react_default","a","createElement","class","length","href","onClick","style","alignSelf","Button","color","Collapse","map","x","React","Component","VocabList","vocabss","vocabs","Vocab_Vocab","Edit","handleChange","handleSubmitClicked","object","editPanelObject","target","name","value","handleEditSubmittedClicked","Modal","className","ModalBody","Form","FormGroup","Label","for","Input","onChange","type","placeholder","ModalFooter","isLoading","role","disabled","config","window","global_config","Home","navToggle","getVocabList","toggleIsLoading","toggleisVocabLoading","navIsOpen","editIsOpen","isVocabLoading","prev","requestConfigObject","method","headers","Authorization","vgt_auth","fetch","vgt_core_url","then","response","ok","json","status","handleRemoveAuthCookie","myJson","data","catch","error","_this3","url","code","_this4","Content-Type","body","JSON","stringify","undefined","Navbar","light","expand","fixed","NavbarBrand","NavbarToggler","navbar","Nav","NavItem","NavLink","VocabList_VocabList","Edit_Edit","Login","password","errorMsg","handleChangeEvent","handleLoginClickEvent","handleRegisterClickEvent","event","defineProperty","message","handleSetAuthCookie","Message","authenticated","aria-describedby","margin","react_router","to","pathname","PrivateRoute","_ref","component","rest","objectWithoutProperties","assign","render","App","cookies","Cookies","get","remove","set","maxAge","react_router_dom","path","exact","modules_Login","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+QCGlCC,EAAY,CACdC,SAAU,QAGOC,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,OAASP,EAAKO,OAAOC,KAAZP,OAAAQ,EAAA,EAAAR,CAAAD,IACdA,EAAKU,UAAYV,EAAKU,UAAUF,KAAfP,OAAAQ,EAAA,EAAAR,CAAAD,IACjBA,EAAKW,SAAWX,EAAKW,SAASH,KAAdP,OAAAQ,EAAA,EAAAR,CAAAD,IAChBA,EAAKY,YAAcZ,EAAKY,YAAYJ,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAKa,MAAQ,CACTC,QAAQ,GAPGd,wEAYfG,KAAKY,SAAS,CACVD,QAASX,KAAKU,MAAMC,0CAInBE,GACLA,EAAEC,iBAEF,IAAIC,EAAa,CACbC,GAAI,KACJC,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,SAAU,KACVC,OAAQ,IAEZN,EAAWK,SAAWpB,KAAKJ,MAAMoB,GAGjChB,KAAKJ,MAAM0B,aACXtB,KAAKJ,MAAM2B,kBAAkBR,qCAIvBF,GACNA,EAAEC,iBAEF,IAAIC,EAAa,CACbC,GAAI,KACJC,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,SAAU,KACVC,OAAQ,IAIZN,EAAWC,GAAKhB,KAAKJ,MAAMoB,GAC3BD,EAAWE,KAAOjB,KAAKJ,MAAMqB,KAC7BF,EAAWG,QAAUlB,KAAKJ,MAAMsB,QAChCH,EAAWI,QAAUnB,KAAKJ,MAAMuB,QAChCJ,EAAWK,SAAWpB,KAAKJ,MAAMwB,SACjCI,QAAQC,IAAI,MACZD,QAAQC,IAAIzB,KAAKJ,MAAMwB,UACvBI,QAAQC,IAAIV,EAAWK,UAEvBpB,KAAKJ,MAAM0B,aACXtB,KAAKJ,MAAM2B,kBAAkBR,uCAIrBF,EAAEa,GACVb,EAAEC,iBAEFd,KAAKJ,MAAM+B,oBAAoBD,oCAI1B,IAAAE,EAAA5B,KACC6B,EAAY7B,KAAKJ,MAAMiC,UAC7B,OACIC,EAAAC,EAAAC,cAAA,OACIC,MAAOjC,KAAKJ,MAAMiC,UAAUK,OAAS,EAAI,sBAAwB,QAEjEJ,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,OACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,OACPH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,+BACLjC,KAAKJ,MAAMqB,KADhB,KAOOjB,KAAKJ,MAAMsB,UAGtBY,EAAAC,EAAAC,cAAA,OAAKC,MAAM,YACPH,EAAAC,EAAAC,cAAA,KAAGG,KAAK,IAAIC,QAAS,SAACvB,GAAOe,EAAKpB,SAASK,KACvCiB,EAAAC,EAAAC,cAAA,KAAGC,MAAM,iBAAiBI,MAAO5C,GAAjC,eAIJqC,EAAAC,EAAAC,cAAA,KAAGG,KAAK,IAAIC,QAAS,SAACvB,GAAOe,EAAKrB,UAAUM,KACxCiB,EAAAC,EAAAC,cAAA,KAAGC,MAAM,iBAAiBI,MAAO5C,GAAjC,SAIJqC,EAAAC,EAAAC,cAAA,KAAGG,KAAK,IAAIC,QAAU,SAACvB,GAAD,OAAOe,EAAKnB,YAAYI,EAAEe,EAAKhC,MAAMoB,MACvDc,EAAAC,EAAAC,cAAA,KAAGC,MAAM,iBAAiBI,MAAO5C,GAAjC,aAMZqC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,OACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,OACPH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,aAAT,aACAH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,aAAajC,KAAKJ,MAAMuB,UAErCW,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eAAeI,MAAO,CAAEC,UAAW,aACzCtC,KAAKJ,MAAMiC,UAAUK,OAAS,GAC3BJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,MAAM,UAAUJ,QAASpC,KAAKI,QAAtC,WAOhB0B,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAU9B,OAAQX,KAAKU,MAAMC,QACzBmB,EAAAC,EAAAC,cAAA,MAAIC,MAAM,cACLJ,EAAUa,IAAI,SAAAC,GACX,OACIb,EAAAC,EAAAC,cAAA,MAAIC,MAAM,mBACNH,EAAAC,EAAAC,cAACrC,EAAD,CACIqB,GAAI2B,EAAE3B,GACNI,SAAUuB,EAAEvB,SACZH,KAAM0B,EAAE1B,KACRC,QAASyB,EAAEzB,QACXC,QAASwB,EAAExB,QACXU,UAAWc,EAAEd,UACbP,WAAYM,EAAKhC,MAAM0B,WACvBC,kBAAmBK,EAAKhC,MAAM2B,kBAC9BI,oBAAqBC,EAAKhC,MAAM+B,mCAxIrCiB,IAAMC,WCUpBC,cACnB,SAAAA,EAAYlD,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA8C,GAAAhD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgD,GAAA3C,KAAAH,KACZJ,0EAOC,IAAAC,EAAAG,KACD+C,EAAU/C,KAAKJ,MAAMoD,OAE3B,OACElB,EAAAC,EAAAC,cAAA,MAAIC,MAAM,+BACPc,EAAQL,IAAI,SAAAC,GACX,OACEb,EAAAC,EAAAC,cAAA,MAAIC,MAAM,mBACRH,EAAAC,EAAAC,cAACiB,EAAD,CACEjC,GAAI2B,EAAE3B,GACNI,SAAUuB,EAAEvB,SACZH,KAAM0B,EAAE1B,KACRC,QAASyB,EAAEzB,QACXC,QAASwB,EAAExB,QACXU,UAAWc,EAAEd,UACbP,WAAYzB,EAAKD,MAAM0B,WACvBC,kBAAmB1B,EAAKD,MAAM2B,kBAC9BI,oBAAqB9B,EAAKD,MAAM+B,iCA1BTiB,IAAMC,mECJxBK,cACnB,SAAAA,EAAYtD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACjBrD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAMJ,KAEDuD,aAAetD,EAAKsD,aAAa9C,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKuD,oBAAsBvD,EAAKuD,oBAAoB/C,KAAzBP,OAAAQ,EAAA,EAAAR,CAAAD,IAJVA,4EAONgB,GACX,IAAMwC,EAASrD,KAAKJ,MAAM0D,gBAC1BD,EAAOxC,EAAE0C,OAAOC,MAAQ3C,EAAE0C,OAAOE,MACjCzD,KAAKJ,MAAM2B,kBAAkB8B,iDAI7BrD,KAAKJ,MAAM8D,8DAMX,OACE5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEhD,OAAQX,KAAKJ,MAAMe,OACnBP,OAAQJ,KAAKJ,MAAMQ,OACnBwD,UAAW5D,KAAKJ,MAAMgE,WAGtB9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOC,IAAI,WAAX,QACAnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEC,SAAUnE,KAAKmD,aACfiB,KAAK,OACLZ,KAAK,OACLxC,GAAG,UACHqD,YAAY,OACZZ,MAAOzD,KAAKJ,MAAM0D,gBAAgBrC,QAGtCa,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOC,IAAI,cAAX,WACAnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEC,SAAUnE,KAAKmD,aACfiB,KAAK,OACLZ,KAAK,UACLxC,GAAG,aACHqD,YAAY,UACZZ,MAAOzD,KAAKJ,MAAM0D,gBAAgBpC,WAGtCY,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAOC,IAAI,cAAX,WACAnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEC,SAAUnE,KAAKmD,aACfiB,KAAK,WACLZ,KAAK,UACLxC,GAAG,aACHqD,YAAY,UACZZ,MAAOzD,KAAKJ,MAAM0D,gBAAgBnC,aAK1CW,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KAEMtE,KAAKJ,MAAM2E,UAEXzC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,8BAA8BuC,KAAK,WAG5C1C,EAAAC,EAAAC,cAAA,YAINF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,MAAM,UAAUJ,QAASpC,KAAKoD,oBAAqBqB,SAAUzE,KAAKJ,MAAM2E,WAAhF,WAEU,IACVzC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQC,MAAM,YAAYJ,QAASpC,KAAKJ,MAAMQ,OAAQqE,SAAUzE,KAAKJ,MAAM2E,WAA3E,oBAhFsB3B,IAAMC,WCXzB6B,EAFFC,OAAOC,cCeCC,cACjB,SAAAA,EAAYjF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6E,IACfhF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+E,GAAA1E,KAAAH,KAAMJ,KAGDkF,UAAYjF,EAAKiF,UAAUzE,KAAfP,OAAAQ,EAAA,EAAAR,CAAAD,IACjBA,EAAKyB,WAAazB,EAAKyB,WAAWjB,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAClBA,EAAK0B,kBAAoB1B,EAAK0B,kBAAkBlB,KAAvBP,OAAAQ,EAAA,EAAAR,CAAAD,IACzBA,EAAK6D,2BAA6B7D,EAAK6D,2BAA2BrD,KAAhCP,OAAAQ,EAAA,EAAAR,CAAAD,IAClCA,EAAKkF,aAAelF,EAAKkF,aAAa1E,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAK8B,oBAAsB9B,EAAK8B,oBAAoBtB,KAAzBP,OAAAQ,EAAA,EAAAR,CAAAD,IAC3BA,EAAKmF,gBAAkBnF,EAAKmF,gBAAgB3E,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAKoF,qBAAuBpF,EAAKoF,qBAAqB5E,KAA1BP,OAAAQ,EAAA,EAAAR,CAAAD,IAC5BA,EAAKa,MAAQ,CACTwE,WAAW,EACXC,YAAY,EACZZ,WAAW,EACXa,gBAAe,EACf9B,gBAAiB,CACbtC,GAAI,KACJI,SAAU,KACVH,KAAM,GACNC,QAAS,GACTC,QAAS,GACTE,OAAQ,IAEZ2B,OAAQ,IAzBGnD,iFA8BfG,KAAKY,SAAS,SAAAyE,GACZ,MAAO,CACLd,WAAYc,EAAKd,4DAOrBvE,KAAKY,SAAS,SAAAyE,GACZ,MAAO,CACLD,gBAAiBC,EAAKD,yDAMf,IAAAxD,EAAA5B,KAGPsF,EAAsB,CACtBC,OAAQ,MACRC,QAAS,CACLC,cALK,UAAYzF,KAAKJ,MAAM8F,WAS9B7F,EAAQG,KAEdH,EAAMoF,uBAENU,MAAMjB,EAAOkB,aAAe,eAAgBN,GACvCO,KAAK,SAAUC,GAEZ,GADAjG,EAAMoF,uBACFa,EAASC,GACT,OAAOD,EAASE,OACU,OAAnBF,EAASG,QAChBpG,EAAMD,MAAMsG,2BAGnBL,KAAK,SAAAM,GACFvE,EAAKhB,SAAS,CAAEoC,OAAQmD,EAAOC,SAChCC,MAAM,SAAUC,GACfzG,EAAMoF,uBACNzD,QAAQC,IAAI6E,iDAKpBtG,KAAK+E,yDAGS1B,GACdrD,KAAKY,SAAS,CACV0C,gBAAiBD,yCAKrBrD,KAAKY,SAAS,CACVuE,YAAanF,KAAKU,MAAMyE,aAG5BnF,KAAKY,SAAS,CACV0C,gBAAiB,CACbtC,GAAI,KACJI,SAAU,KACVH,KAAM,GACNC,QAAS,GACTC,QAAS,GACTE,OAAQ,0CAMhBrB,KAAKY,SAAS,CACVsE,WAAYlF,KAAKU,MAAMwE,wDAIXxD,GAAS,IAAA6E,EAAAvG,KAGrBsF,EAAsB,CACtBC,OAAQ,SACRC,QAAS,CACLC,cALK,UAAYzF,KAAKJ,MAAM8F,WAS9B7F,EAAQG,KACRwG,EAAM9B,EAAOkB,aAAe,eAAiBlE,EAEnDF,QAAQC,IAAI+E,GAIZb,MAAMa,EAAKlB,GACNO,KAAK,SAAUC,GAEZ,GAAIA,EAASC,GACT,OAAOD,EAASE,OACU,OAAnBF,EAASG,QAChBpG,EAAMD,MAAMsG,2BAGnBL,KAAK,SAAAM,GACF3E,QAAQC,IAAI0E,GACO,KAAfA,EAAOM,KACPF,EAAKxB,eAELvD,QAAQC,IAAI0E,KAEjBE,MAAM,SAAUC,GAEf9E,QAAQC,IAAI6E,0DAIK,IAAAI,EAAA1G,KAGrBsF,EAAsB,CACtBC,OAAQ,OACRC,QAAS,CACLC,cALK,UAAYzF,KAAKJ,MAAM8F,SAM5BiB,eAAgB,oBAGpBC,KAAMC,KAAKC,UAAU9G,KAAKU,MAAM4C,kBAGpC9B,QAAQC,IAAIzB,KAAKU,MAAM4C,iBAEvB,IAAMzD,EAAQG,KACRwG,EAAM9B,EAAOkB,aAAe,gBAAoD,MAAlC/F,EAAMa,MAAM4C,gBAAgBtC,SAAgD+F,GAAlClH,EAAMa,MAAM4C,gBAAgBtC,GAAkB,GAAKnB,EAAMa,MAAM4C,gBAAgBtC,IAE7KQ,QAAQC,IAAI+E,GAEZxG,KAAKgF,kBAELW,MAAMa,EAAKlB,GACNO,KAAK,SAAUC,GAEZ,GADAjG,EAAMmF,kBACFc,EAASC,GACT,OAAOD,EAASE,OACU,OAAnBF,EAASG,QAChBpG,EAAMD,MAAMsG,2BAGnBL,KAAK,SAAAM,GACF3E,QAAQC,IAAI0E,GACO,KAAfA,EAAOM,MACP5G,EAAMyB,aACNoF,EAAK3B,gBAELvD,QAAQC,IAAI0E,KAEjBE,MAAM,SAAUC,GACfzG,EAAMmF,kBACNxD,QAAQC,IAAI6E,sCAKpB,OACIxE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CACIxE,MAAM,QACNyE,OAAK,EACLC,OAAO,KACPtD,UAAU,+BACVuD,MAAM,OAENrF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAajF,KAAK,IAAIyB,UAAU,gBAAhC,OAGA9B,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAejF,QAASpC,KAAK8E,YAC7BhD,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAU9B,OAAQX,KAAKU,MAAMwE,UAAWoC,QAAM,GAC1CxF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAK3D,UAAU,UAAU0D,QAAM,GAc3BxF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,KACI1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACItF,KAAK,IACLyB,UAAU,eACVxB,QAASpC,KAAKsB,YAHlB,cAQJQ,EAAAC,EAAAC,cAACwF,EAAA,EAAD,KACI1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAStF,KAAK,IAAIyB,UAAU,eAAexB,QAASpC,KAAKJ,MAAMsG,wBAA/D,eAQpBpE,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACLjC,KAAKU,MAAM0E,eAELtD,EAAAC,EAAAC,cAAA,OAAKC,MAAM,8BACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,8BAA8BuC,KAAK,YAIlD1C,EAAAC,EAAAC,cAAA,YAIRF,EAAAC,EAAAC,cAAC0F,EAAD,CAAW1E,OAAQhD,KAAKU,MAAMsC,OAAQ1B,WAAYtB,KAAKsB,WAAYC,kBAAmBvB,KAAKuB,kBAAmBI,oBAAqB3B,KAAK2B,uBAG5IG,EAAAC,EAAAC,cAAC2F,EAAD,CACIhH,OAAQX,KAAKU,MAAMyE,WACnB/E,OAAQJ,KAAKsB,WACbgC,gBAAiBtD,KAAKU,MAAM4C,gBAC5B/B,kBAAmBvB,KAAKuB,kBACxBmC,2BAA4B1D,KAAK0D,2BACjCa,UAAWvE,KAAKU,MAAM6D,oBAzQR3B,IAAMC,2BCuKzB+E,cAzKb,SAAAA,EAAYhI,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4H,IAChB/H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8H,GAAAzH,KAAAH,KAAMJ,KACDc,MAAM,CACT8C,KAAM,GACNqE,SAAU,GACVC,SAAU,GACVvD,WAAW,GAGb1E,EAAKkI,kBAAoBlI,EAAKkI,kBAAkB1H,KAAvBP,OAAAQ,EAAA,EAAAR,CAAAD,IACzBA,EAAKmI,sBAAwBnI,EAAKmI,sBAAsB3H,KAA3BP,OAAAQ,EAAA,EAAAR,CAAAD,IAC7BA,EAAKoI,yBAA2BpI,EAAKoI,yBAAyB5H,KAA9BP,OAAAQ,EAAA,EAAAR,CAAAD,IAChCA,EAAKmF,gBAAkBnF,EAAKmF,gBAAgB3E,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IAZPA,iFAiBAqI,GAChB1G,QAAQC,IAAIyG,EAAM3E,OAAOC,MACzBxD,KAAKY,SAALd,OAAAqI,EAAA,EAAArI,CAAA,GACGoI,EAAM3E,OAAOC,KAAQ0E,EAAM3E,OAAOE,kDAKrCzD,KAAKY,SAAS,SAAAyE,GACZ,MAAO,CACLd,WAAYc,EAAKd,6DAMA,IAAA3C,EAAA5B,KACrBA,KAAKY,SAAS,CACZkH,SAAU,KAEZ,IAAMjI,EAAQG,KAEdA,KAAKgF,kBAELW,MAAMjB,EAAOkB,aAAe,4BAA4B,CACtDL,OAAQ,OACRqB,KAAMC,KAAKC,UAAU9G,KAAKU,OAC1B8E,QAAQ,CACNmB,eAAgB,sBAGjBd,KAAK,SAAUC,GAEhB,GADAjG,EAAMmF,kBACFc,EAASC,GACT,OAAOD,EAASE,SAGrBH,KAAK,SAAAM,GACJ3E,QAAQC,IAAI0E,GACS,MAAfA,EAAOM,KACT7E,EAAKhB,SAAS,CACZkH,SAAU3B,EAAOiC,UAGnBvI,EAAMD,MAAMyI,oBAAoBlC,EAAOC,QAG1CC,MAAM,SAASC,GAChBzG,EAAMmF,kBACJxD,QAAQC,IAAI6E,GACZzG,EAAMe,SAAS,CAACkH,SAAUxB,EAAMgC,+DAIZ,IAAA/B,EAAAvG,KACxBA,KAAKY,SAAS,CACZkH,SAAU,KAEZ,IAAMjI,EAAQG,KAEdA,KAAKgF,kBAELW,MAAMjB,EAAOkB,aAAe,+BAA+B,CACzDL,OAAQ,OACRqB,KAAMC,KAAKC,UAAU9G,KAAKU,OAC1B8E,QAAQ,CACNmB,eAAgB,sBAGjBd,KAAK,SAAUC,GAEhB,GADAjG,EAAMmF,kBACFc,EAASC,GACT,OAAOD,EAASE,SAGrBH,KAAK,SAAAM,GACJ3E,QAAQC,IAAI0E,GACS,MAAfA,EAAOM,KACTF,EAAK3F,SAAS,CACZkH,SAAU3B,EAAOiC,UAGnBvI,EAAMmI,0BAGT3B,MAAM,SAASC,GAChBzG,EAAMmF,kBACJxD,QAAQC,IAAI6E,GACZzG,EAAMe,SAAS,CAACkH,SAAUxB,EAAMgC,6CAMpC,IAAMC,EAAuC,IAAvBvI,KAAKJ,MAAM8F,eAAyCqB,GAAvB/G,KAAKJ,MAAM8F,UAAgD,MAAvB1F,KAAKJ,MAAM8F,SAClG,OACE5D,EAAAC,EAAAC,cAAA,WACMF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,uBACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,uBACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACXH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,0BAAV,OACAH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cACTH,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,QAAQnC,MAAM,eAAeuG,mBAAiB,YAAYnE,YAAY,cAAcZ,MAAOzD,KAAKU,MAAM8C,KAAMW,SAAUnE,KAAK+H,kBAAmBvE,KAAK,UAE/J1B,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cACXH,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,WAAWnC,MAAM,eAAgBoC,YAAY,WAAWZ,MAAOzD,KAAKU,MAAMmH,SAAU1D,SAAUnE,KAAK+H,kBAAmBvE,KAAK,cAEvI1B,EAAAC,EAAAC,cAAA,OAAKC,MAAM,8BACXH,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQF,MAAO,CAACoG,OAAQ,OAAQjG,MAAM,UAAUJ,QAASpC,KAAKgI,sBAAuBvD,SAAUzE,KAAKU,MAAM6D,WAA1G,SAIAzC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQF,MAAO,CAACoG,OAAQ,OAAQjG,MAAM,UAAUJ,QAASpC,KAAKiI,yBAA0BxD,SAAUzE,KAAKU,MAAM6D,WAA7G,YAGEvE,KAAKU,MAAM6D,UAEXzC,EAAAC,EAAAC,cAAA,OAAKC,MAAM,8BAA8BuC,KAAK,WAG5C1C,EAAAC,EAAAC,cAAA,aAMJF,EAAAC,EAAAC,cAAA,UAAKhC,KAAKU,MAAMoH,gBAQpBS,EACAzG,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,OAId9G,EAAAC,EAAAC,cAAA,oBAlKQY,IAAMC,2BCK1B,SAASgG,EAATC,GAAyD,IAAtBjG,EAAsBiG,EAAjCC,UAAyBC,EAAQlJ,OAAAmJ,EAAA,EAAAnJ,CAAAgJ,EAAA,eACvD,OACEhH,EAAAC,EAAAC,cAAC0G,EAAA,EAAD5I,OAAAoJ,OAAA,GACMF,EADN,CAEEG,OAAQ,SAAAvJ,GAAK,OACXoJ,EAAKtD,SACH5D,EAAAC,EAAAC,cAACa,EAAcmG,GAEblH,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,oBAmEXQ,cAvCb,SAAAA,EAAYxJ,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoJ,GACjBvJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsJ,GAAAjJ,KAAAH,KAAMJ,IACN,IAAMyJ,EAAU,IAAIC,IAFH,OAGjBzJ,EAAKa,MAAQ,CACXgF,SAAU2D,EAAQE,IAAI,aAGxB1J,EAAKqG,uBAAyBrG,EAAKqG,uBAAuB7F,KAA5BP,OAAAQ,EAAA,EAAAR,CAAAD,IAC9BA,EAAKwI,oBAAsBxI,EAAKwI,oBAAoBhI,KAAzBP,OAAAQ,EAAA,EAAAR,CAAAD,IARVA,yFAYD,IAAIyJ,KACZE,OAAO,YACfxJ,KAAKY,SAAS,CACZ8E,SAAU,iDAIMA,IACF,IAAI4D,KACZG,IAAI,WAAW/D,EAAS,CAAEgE,OAAQ,UAC1C1J,KAAKY,SAAS,CACZ8E,SAAUA,qCAIL,IAAA9D,EAAA5B,KACP,OACE8B,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,KACE7H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6G,EAAD,CAAcnD,SAAU1F,KAAKU,MAAMgF,SAAUkE,KAAK,IAAIb,UAAWlE,EAAMgF,OAAK,EAAC3D,uBAAwBlG,KAAKkG,yBAC1GpE,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOkB,KAAK,SAAST,OAAQ,kBAAMrH,EAAAC,EAAAC,cAAC8H,EAAD,CAAOpE,SAAU9D,EAAKlB,MAAMgF,SAAU2C,oBAAqBzG,EAAKyG,kCAjC3FzF,IAAMC,WC1CJkH,QACW,cAA7BpF,OAAOqF,SAASC,UAEe,UAA7BtF,OAAOqF,SAASC,UAEhBtF,OAAOqF,SAASC,SAASC,MACvB,uECVNC,IAAShB,OAAOrH,EAAAC,EAAAC,cAACoI,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5E,KAAK,SAAA6E,GACjCA,EAAaC","file":"static/js/main.d28f0e8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { Collapse, Button } from \"reactstrap\";\n\nconst iconStyle = {\n    fontSize: \"18px\"\n};\n\nexport default class Vocab extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.editClick = this.editClick.bind(this);\n        this.addClick = this.addClick.bind(this);\n        this.deleteClick = this.deleteClick.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    addClick(e) {\n        e.preventDefault();\n\n        let editObject = {\n            id: null,\n            word: \"\",\n            meaning: \"\",\n            example: \"\",\n            parentId: null,\n            userId: \"\"\n        };\n        editObject.parentId = this.props.id;\n\n\n        this.props.editToggle();\n        this.props.editPanelOnChange(editObject);\n\n    }\n\n    editClick(e) {\n        e.preventDefault();\n\n        let editObject = {\n            id: null,\n            word: \"\",\n            meaning: \"\",\n            example: \"\",\n            parentId: null,\n            userId: \"\"\n        };\n\n\n        editObject.id = this.props.id;\n        editObject.word = this.props.word;\n        editObject.meaning = this.props.meaning;\n        editObject.example = this.props.example;\n        editObject.parentId = this.props.parentId;\n        console.log(\"Hi\")\n        console.log(this.props.parentId)\n        console.log(editObject.parentId)\n\n        this.props.editToggle();\n        this.props.editPanelOnChange(editObject);\n\n    }\n\n    deleteClick(e,deleteId){\n        e.preventDefault();\n        \n        this.props.handleRemoveClicked(deleteId);\n    }\n\n\n    render() {\n        const subVocabs = this.props.subVocabs;\n        return (\n            <div\n                class={this.props.subVocabs.length > 0 ? \"card border-primary\" : \"card\"}\n            >\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <h5 class=\"card-title font-weight-bold\">\n                                {this.props.word}\n                                {/* <a href=\"#\">\n                                    <i class=\"material-icons\" style={iconStyle}>\n                                        volume_down\n                  </i>\n                                </a> */}\n                                : {this.props.meaning}\n                            </h5>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a href=\"#\" onClick={(e) => {this.addClick(e)}}>\n                                <i class=\"material-icons\" style={iconStyle}>\n                                    add_circle\n                </i>\n                            </a>\n                            <a href=\"#\" onClick={(e) => {this.editClick(e)}}>\n                                <i class=\"material-icons\" style={iconStyle}>\n                                    edit\n                </i>\n                            </a>\n                            <a href=\"#\" onClick={ (e) => this.deleteClick(e,this.props.id)}>\n                                <i class=\"material-icons\" style={iconStyle}>\n                                    cancel\n                </i>\n                            </a>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <p class=\"card-text\">Example: </p>\n                            <p class=\"card-text\">{this.props.example}</p>\n                        </div>\n                        <div class=\"col col-auto\" style={{ alignSelf: \"flex-end\" }}>\n                            {this.props.subVocabs.length > 0 && (\n                                <Button color=\"primary\" onClick={this.toggle}>\n                                    More\n                </Button>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <Collapse isOpen={this.state.isOpen}>\n                    <ul class=\"list-group\">\n                        {subVocabs.map(x => {\n                            return (\n                                <li class=\"list-group-item\">\n                                    <Vocab\n                                        id={x.id}\n                                        parentId={x.parentId}\n                                        word={x.word}\n                                        meaning={x.meaning}\n                                        example={x.example}\n                                        subVocabs={x.subVocabs}\n                                        editToggle={this.props.editToggle}\n                                        editPanelOnChange={this.props.editPanelOnChange}\n                                        handleRemoveClicked={this.props.handleRemoveClicked}\n                                    />\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </Collapse>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport Vocab from \"./Vocab.js\";\n\nexport default class VocabList extends React.Component {\n  constructor(props) {\n    super(props);\n    // initialize\n\n  }\n\n  \n\n  render() {\n    const vocabss = this.props.vocabs;\n\n    return (\n      <ul class=\"list-group list-group-flush\">\n        {vocabss.map(x => {\n          return (\n            <li class=\"list-group-item\">\n              <Vocab\n                id={x.id}\n                parentId={x.parentId}\n                word={x.word}\n                meaning={x.meaning}\n                example={x.example}\n                subVocabs={x.subVocabs}\n                editToggle={this.props.editToggle}\n                editPanelOnChange={this.props.editPanelOnChange}\n                handleRemoveClicked={this.props.handleRemoveClicked}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\n\nexport default class Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmitClicked = this.handleSubmitClicked.bind(this)\n  }\n\n  handleChange(e) {\n    const object = this.props.editPanelObject;\n    object[e.target.name] = e.target.value;\n    this.props.editPanelOnChange(object);\n  }\n\n  handleSubmitClicked() {\n    this.props.handleEditSubmittedClicked();\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={this.props.isOpen}\n          toggle={this.props.toggle}\n          className={this.props.className}\n        >\n          {/*<ModalHeader toggle={this.props.toggle}></ModalHeader> */}\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <Label for=\"txtWord\">Word</Label>\n                <Input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"word\"\n                  id=\"txtWord\"\n                  placeholder=\"Word\"\n                  value={this.props.editPanelObject.word}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"txtMeaning\">Meaning</Label>\n                <Input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"meaning\"\n                  id=\"txtMeaning\"\n                  placeholder=\"Meaning\"\n                  value={this.props.editPanelObject.meaning}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"txtExample\">Example</Label>\n                <Input\n                  onChange={this.handleChange}\n                  type=\"textarea\"\n                  name=\"example\"\n                  id=\"txtExample\"\n                  placeholder=\"Example\"\n                  value={this.props.editPanelObject.example}\n                />\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            { \n                this.props.isLoading ?\n                (\n                <div class=\"spinner-border text-primary\" role=\"status\">\n                </div> \n                ) : (\n                  <div></div>\n                )\n\n            }\n            <Button color=\"primary\" onClick={this.handleSubmitClicked} disabled={this.props.isLoading}>\n              Confirm\n            </Button>{\" \"}\n            <Button color=\"secondary\" onClick={this.props.toggle} disabled={this.props.isLoading}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n","let config = window.global_config; //require('./Config/config.json');\n\nexport default config;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from \"reactstrap\";\nimport VocabList from \"./VocabList.js\";\nimport Edit from \"./Edit.js\";\nimport config from '../Config.js';\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n\n        this.navToggle = this.navToggle.bind(this);\n        this.editToggle = this.editToggle.bind(this);\n        this.editPanelOnChange = this.editPanelOnChange.bind(this);\n        this.handleEditSubmittedClicked = this.handleEditSubmittedClicked.bind(this)\n        this.getVocabList = this.getVocabList.bind(this);\n        this.handleRemoveClicked = this.handleRemoveClicked.bind(this);\n        this.toggleIsLoading = this.toggleIsLoading.bind(this);\n        this.toggleisVocabLoading = this.toggleisVocabLoading.bind(this);\n        this.state = {\n            navIsOpen: false,\n            editIsOpen: false,\n            isLoading: false,\n            isVocabLoading:false,\n            editPanelObject: {\n                id: null,\n                parentId: null,\n                word: \"\",\n                meaning: \"\",\n                example: \"\",\n                userId: \"\"\n            },\n            vocabs: []\n        };\n    }\n\n    toggleIsLoading(){\n        this.setState(prev => {\n          return {\n            isLoading: !prev.isLoading\n          }\n        })\n        // this.state.isLoading = !this.state.isLoading;\n      }\n\n      toggleisVocabLoading(){\n        this.setState(prev => {\n          return {\n            isVocabLoading: !prev.isVocabLoading\n          }\n        })\n        // this.state.isLoading = !this.state.isLoading;\n      }\n\n    getVocabList() {\n        var bearer = 'Bearer ' + this.props.vgt_auth;\n\n        var requestConfigObject = {\n            method: 'GET',\n            headers: {\n                'Authorization': bearer\n            }\n        }\n\n        const _this = this;\n\n        _this.toggleisVocabLoading();\n\n        fetch(config.vgt_core_url + \"/api/vocabs/\", requestConfigObject)\n            .then(function (response) {\n                _this.toggleisVocabLoading();\n                if (response.ok) {\n                    return response.json();\n                } else if (response.status == '401') {\n                    _this.props.handleRemoveAuthCookie();\n                }\n            })\n            .then(myJson => {\n                this.setState({ vocabs: myJson.data });\n            }).catch(function (error) {\n                _this.toggleisVocabLoading();\n                console.log(error);\n            });\n    }\n\n    componentDidMount() {\n        this.getVocabList();\n    }\n\n    editPanelOnChange(object) {\n        this.setState({\n            editPanelObject: object\n        });\n    }\n\n    editToggle() {\n        this.setState({\n            editIsOpen: !this.state.editIsOpen\n        });\n\n        this.setState({\n            editPanelObject: {\n                id: null,\n                parentId: null,\n                word: \"\",\n                meaning: \"\",\n                example: \"\",\n                userId: \"\"\n            }\n        })\n    }\n\n    navToggle() {\n        this.setState({\n            navIsOpen: !this.state.navIsOpen\n        });\n    }\n\n    handleRemoveClicked(deleteId){\n        var bearer = 'Bearer ' + this.props.vgt_auth;\n\n        var requestConfigObject = {\n            method: 'Delete',\n            headers: {\n                'Authorization': bearer\n            }\n        }\n\n        const _this = this;\n        const url = config.vgt_core_url + \"/api/vocabs/\" + deleteId;\n\n        console.log(url)\n\n        // this.toggleIsLoading();\n\n        fetch(url, requestConfigObject)\n            .then(function (response) {\n                // _this.toggleIsLoading();\n                if (response.ok) {\n                    return response.json();\n                } else if (response.status == '401') {\n                    _this.props.handleRemoveAuthCookie();\n                }\n            })\n            .then(myJson => {\n                console.log(myJson)\n                if (myJson.code == 200) {\n                    this.getVocabList();\n                } else {\n                    console.log(myJson);\n                }\n            }).catch(function (error) {\n                // _this.toggleIsLoading()\n                console.log(error);\n            });\n    }\n\n    handleEditSubmittedClicked() {\n        var bearer = 'Bearer ' + this.props.vgt_auth;\n\n        var requestConfigObject = {\n            method: 'Post',\n            headers: {\n                'Authorization': bearer,\n                'Content-Type': 'application/json'\n            },\n\n            body: JSON.stringify(this.state.editPanelObject)\n        }\n\n        console.log(this.state.editPanelObject)\n\n        const _this = this;\n        const url = config.vgt_core_url + \"/api/vocabs/\" + (_this.state.editPanelObject.id == null || _this.state.editPanelObject.id == undefined ? \"\" : _this.state.editPanelObject.id);\n\n        console.log(url)\n\n        this.toggleIsLoading()\n\n        fetch(url, requestConfigObject)\n            .then(function (response) {\n                _this.toggleIsLoading()\n                if (response.ok) {\n                    return response.json();\n                } else if (response.status == '401') {\n                    _this.props.handleRemoveAuthCookie();\n                }\n            })\n            .then(myJson => {\n                console.log(myJson)\n                if (myJson.code == 200) {\n                    _this.editToggle();\n                    this.getVocabList();\n                } else {\n                    console.log(myJson);\n                }\n            }).catch(function (error) {\n                _this.toggleIsLoading()\n                console.log(error);\n            });\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <Navbar\n                        color=\"light\"\n                        light\n                        expand=\"md\"\n                        className=\"border-bottom border-primary\"\n                        fixed=\"top\"\n                    >\n                        <NavbarBrand href=\"/\" className=\"text-primary\">\n                            VGT\n            </NavbarBrand>\n                        <NavbarToggler onClick={this.navToggle} />\n                        <Collapse isOpen={this.state.navIsOpen} navbar>\n                            <Nav className=\"ml-auto\" navbar>\n                                {/* <NavItem>\n                                    <form class=\"form-inline my=2 my-lg-0\">\n                                        <input\n                                            class=\"form-control mr-sm-2\"\n                                            type=\"search\"\n                                            placeholder=\"Search Vocab\"\n                                            aria-label=\"Search\"\n                                        />\n                                        <button class=\"btn btn-primary my-2 my-sm-0\" type=\"button\">\n                                            Search\n                    </button>\n                                    </form>\n                                </NavItem> */}\n                                <NavItem>\n                                    <NavLink\n                                        href=\"#\"\n                                        className=\"text-primary\"\n                                        onClick={this.editToggle}\n                                    >\n                                        add vocab\n                  </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"#\" className=\"text-primary\" onClick={this.props.handleRemoveAuthCookie}>\n                                        Logout\n                  </NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </Navbar>\n                </div>\n                <div class=\"container\">\n                    { this.state.isVocabLoading ?\n                        (\n                            <div class='row justify-content-center'>\n                                <div class=\"spinner-border text-primary\" role=\"status\">\n                                </div> \n                            </div> \n                        ) : (\n                            <div></div>\n                        )\n\n                    }\n                    <VocabList vocabs={this.state.vocabs} editToggle={this.editToggle} editPanelOnChange={this.editPanelOnChange} handleRemoveClicked={this.handleRemoveClicked}\n                    />\n                </div>\n                <Edit\n                    isOpen={this.state.editIsOpen}\n                    toggle={this.editToggle}\n                    editPanelObject={this.state.editPanelObject}\n                    editPanelOnChange={this.editPanelOnChange}\n                    handleEditSubmittedClicked={this.handleEditSubmittedClicked}\n                    isLoading={this.state.isLoading}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport { Collapse, Button } from \"reactstrap\";\nimport config from '../Config.js';\n\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      name: \"\",\n      password: \"\",\n      errorMsg: \"\",\n      isLoading: false\n    }\n\n    this.handleChangeEvent = this.handleChangeEvent.bind(this);\n    this.handleLoginClickEvent = this.handleLoginClickEvent.bind(this);\n    this.handleRegisterClickEvent = this.handleRegisterClickEvent.bind(this);\n    this.toggleIsLoading = this.toggleIsLoading.bind(this);\n    //this.redirectToHome = this.redirectToHome.bind(this);\n    \n  }\n\n  handleChangeEvent(event){\n    console.log(event.target.name)\n    this.setState({\n      [event.target.name] : event.target.value\n    });\n  }\n\n  toggleIsLoading(){\n    this.setState(prev => {\n      return {\n        isLoading: !prev.isLoading\n      }\n    })\n    // this.state.isLoading = !this.state.isLoading;\n  }\n\n  handleLoginClickEvent(){\n    this.setState({\n      errorMsg: \"\"\n    })\n    const _this = this;\n\n    this.toggleIsLoading()\n\n    fetch(config.vgt_core_url + \"/api/Authentication/Login\",{\n      method: 'POST', // or 'PUT'\n      body: JSON.stringify(this.state), // data can be `string` or {object}!\n      headers:{\n        'Content-Type': 'application/json'\n      }\n\n    }).then(function (response) {\n      _this.toggleIsLoading()\n      if (response.ok){\n          return response.json();\n      }\n    })\n    .then(myJson => {\n      console.log(myJson)\n        if (myJson.code == 1999){\n          this.setState({\n            errorMsg: myJson.message\n          })\n        }else{\n          _this.props.handleSetAuthCookie(myJson.data);\n        }\n        \n    }).catch(function(error) {\n      _this.toggleIsLoading()\n        console.log(error)\n        _this.setState({errorMsg: error.Message})\n    });\n  }\n\n  handleRegisterClickEvent(){\n    this.setState({\n      errorMsg: \"\"\n    })\n    const _this = this;\n\n    this.toggleIsLoading()\n\n    fetch(config.vgt_core_url + \"/api/Authentication/Register\",{\n      method: 'POST', // or 'PUT'\n      body: JSON.stringify(this.state), // data can be `string` or {object}!\n      headers:{\n        'Content-Type': 'application/json'\n      }\n\n    }).then(function (response) {\n      _this.toggleIsLoading()\n      if (response.ok){\n          return response.json();\n      }\n    })\n    .then(myJson => {\n      console.log(myJson)\n        if (myJson.code == 1999){\n          this.setState({\n            errorMsg: myJson.message\n          })\n        }else{\n          _this.handleLoginClickEvent();\n        }\n        \n    }).catch(function(error) {\n      _this.toggleIsLoading()\n        console.log(error)\n        _this.setState({errorMsg: error.Message})\n    });\n  }\n  \n\n  render(){\n    const authenticated = this.props.vgt_auth == \"\" || this.props.vgt_auth == undefined || this.props.vgt_auth == null ? false : true;\n    return (\n      <div>\n            <div class='vertical-center'>\n          <div class='container'>\n          <div class='row justify-content-center'>\n          <div class=\"col col-lg-6 col-12\">\n            <div class=\"card border-primary\">\n              <div class=\"card-body\">\n              <h4 class=\"card-title text-center\">VGT</h4>\n              <div class=\"form-group\">\n                <input type=\"email\" class=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" value={this.state.name} onChange={this.handleChangeEvent} name=\"name\"/>\n              </div>\n                <div class=\"form-group\">\n                <input type=\"password\" class=\"form-control\"  placeholder=\"Password\" value={this.state.password} onChange={this.handleChangeEvent} name=\"password\" />\n                </div>\n                <div class='row justify-content-center'>\n                <Button style={{margin: \"2px\"}} color=\"primary\" onClick={this.handleLoginClickEvent} disabled={this.state.isLoading}>\n                                    Login\n                </Button>\n\n                <Button style={{margin: \"2px\"}} color=\"primary\" onClick={this.handleRegisterClickEvent} disabled={this.state.isLoading}>\n                                    Register\n                </Button>\n                { this.state.isLoading ?\n                  (\n                  <div class=\"spinner-border text-primary\" role=\"status\">\n                  </div> \n                  ) : (\n                    <div></div>\n                  )\n\n                }\n                  \n                </div>\n                <h6>{this.state.errorMsg}</h6>\n                </div>\n            </div>\n          </div>\n          </div>\n        </div>\n        </div>\n        {\n            authenticated ? (\n            <Redirect\n              to={{\n                pathname: \"/\"\n              }}\n            /> \n            ): ( \n            <div></div>\n            )\n          }\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './modules/Home.js'\nimport Login from './modules/Login.js'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\n\n\n\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route \n      {...rest}\n      render={props =>\n        rest.vgt_auth ? (\n          <Component {...rest}/>\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\"\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\n// const AuthButton = withRouter(\n//   ({ history }) =>\n//     fakeAuth.isAuthenticated ? (\n//       <p>\n//         Welcome!{\" \"}\n//         <button\n//           onClick={() => {\n//             fakeAuth.signout(() => history.push(\"/\"));\n//           }}\n//         >\n//           Sign out\n//         </button>\n//       </p>\n//     ) : (\n//       <p>You are not logged in.</p>\n//     )\n// );\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const cookies = new Cookies();\n    this.state = {\n      vgt_auth: cookies.get('vgt_auth')\n    }\n\n    this.handleRemoveAuthCookie = this.handleRemoveAuthCookie.bind(this);\n    this.handleSetAuthCookie = this.handleSetAuthCookie.bind(this);\n  }\n\n  handleRemoveAuthCookie(){\n    const cookies = new Cookies();\n    cookies.remove('vgt_auth');\n    this.setState({\n      vgt_auth: \"\"\n    })\n  }\n\n  handleSetAuthCookie(vgt_auth){\n    const cookies = new Cookies();\n    cookies.set('vgt_auth',vgt_auth,{ maxAge: 60 * 60 * 24 * 365});\n    this.setState({\n      vgt_auth: vgt_auth\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <PrivateRoute vgt_auth={this.state.vgt_auth} path=\"/\" component={Home} exact handleRemoveAuthCookie={this.handleRemoveAuthCookie} />\n          <Route path=\"/login\" render={() => <Login vgt_auth={this.state.vgt_auth} handleSetAuthCookie={this.handleSetAuthCookie}  />} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'material-design-icons/iconfont/material-icons.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}